
apiVersion: v1
kind: Secret
metadata:
  name: pgdatastress
type: Opaque
data:
  PGSEAT: cG9zdGdyZXM6Ly9RdWVzdE1hc3RlckRiOnRGQXRmNmhDWGRSaGZXWkBxdWVzdGRiLmN1Z214b2xrbXV2ay51cy1lYXN0LTIucmRzLmFtYXpvbmF3cy5jb206NTQzMi9xdWVzdA==
  ROUND: MjA=

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvol
  labels:
    type: local
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/app/

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: appclaim1
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts
  labels:
    app: accs
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accs
      tier: backend
  template:
    metadata:
      labels:
        app: accs
        tier: backend
    spec:
      volumes:
        - name: accounts
          persistentVolumeClaim:
            claimName: appclaim1
      containers:
      - name: accounts-api
        image: accounts-api
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8080
        volumeMounts:
          - mountPath: /accounts
            name: accounts
        resources:
          limits:
            cpu: "0.5"
            memory: 212Mi
          requests:
            cpu: "0.3"
        env:
          - name: PGDB_URI
            valueFrom:
              secretKeyRef:
                name: pgdatastress
                key: PGSEAT
          - name: LOG_H
            valueFrom:
              secretKeyRef:
                name: pgdatastress
                key: ROUND

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts-server
  labels:
    app: accs
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accs
      tier: frontend
  strategy: {}
  template:
    metadata:
      labels:
        app: accs
        tier: frontend
    spec:
      containers:
      - name: accounts-server
        image: accounts-server
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "0.5"
            memory: 212Mi
          requests:
            cpu: "0.3"
      restartPolicy: Always
status: {}

